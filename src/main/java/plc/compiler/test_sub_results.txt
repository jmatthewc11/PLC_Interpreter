AnalyzerTests: (23/25)
  Source: (2/3)
    Valid Source `Source{statements=[Expression{expression=Function{name=\'PRINT\', arguments=[Literal{value=Hello, World!, type=null}], type=null}}]}`:
    Failed (Expected Source{statements=[Expression{expression=Function{name=\'System.out.println\', arguments=[Literal{value=Hello, World!, type=Type{name=\'STRING\', jvmName=\'String\'}}], type=Type{name=\'VOID\', jvmName=\'Void\'}}}]},
    received         Source{statements=[Expression{expression=Function{name=\'PRINT\', arguments=[Literal{value=Hello, World!, type=null}], type=null}}]}.)
  Expression: (7/8)
    Group: (1/2)
      Literal Valid `Group{expression=Literal{value=10, type=null}, type=null}`:
      Failed (Expected Group{expression=Literal{value=10, type=Type{name=\'INTEGER\', jvmName=\'int\'}}, type=Type{name=\'INTEGER\', jvmName=\'int\'}},
      received         Group{expression=Literal{value=10, type=Type{name=\'INTEGER\', jvmName=\'int\'}}, type=null}.)


ParserTests: (89/100) Statement: (35/38)

    While: (7/8) Empty While `[IDENTIFIER=`WHILE`@0, IDENTIFIER=`expr`@6, IDENTIFIER=`DO`@11, IDENTIFIER=`END`@14]`:
    Failed (Unexpected java.lang.NullPointerException: Cannot invoke \"java.util.List.equals(Object)\" because \"this.statements\" is null)
    Expression: (44/48) Binary: (6/9) Equality: (2/3) Multiple: (0/1)
    Multiple == `[IDENTIFIER=`expr1`@0, OPERATOR=`==`@6, IDENTIFIER=`expr2`@9, OPERATOR=`==`@15, IDENTIFIER=`expr3`@18]`:
    Failed (Expected Binary{operator=\'==\', left=Binary{operator=\'==\', left=Variable{name=\'expr1\'}, right=Variable{name=\'expr2\'}}, right=Variable{name=\'expr3\'}},
    received         Binary{operator=\'==\', left=Variable{name=\'expr1\'}, right=Variable{name=\'expr2\'}}) Multiple != `[IDENTIFIER=`expr1`@0, OPERATOR=`!=`@6, IDENTIFIER=`expr2`@9, OPERATOR=`!=`@15, IDENTIFIER=`expr3`@18]`: Failed (Expected Binary{operator=\'!=\', left=Binary{operator=\'!=\', left=Variable{name=\'expr1\'}, right=Variable{name=\'expr2\'}}, right=Variable{name=\'expr3\'}}, received Binary{operator=\'!=\', left=Variable{name=\'expr1\'}, right=Variable{name=\'expr2\'}}) Additive: (2/3) Multiple: (0/1) Multiple Additions `[IDENTIFIER=`expr1`@0, OPERATOR=`+`@6, IDENTIFIER=`expr2`@8, OPERATOR=`+`@14, IDENTIFIER=`expr3`@16]`: Failed (Unexpected ParseException (Additive expression is missing operator)) Multiple Subtractions `[IDENTIFIER=`expr1`@0, OPERATOR=`-`@6, IDENTIFIER=`expr2`@8, OPERATOR=`-`@14, IDENTIFIER=`expr3`@16]`: Failed (Unexpected ParseException (Additive expression is missing operator)) Multiplicative: (2/3) Multiple: (0/1) Multiple Multiplications `[IDENTIFIER=`expr1`@0, OPERATOR=`*`@6, IDENTIFIER=`expr2`@8, OPERATOR=`*`@14, IDENTIFIER=`expr3`@16]`: Failed (Unexpected ParseException (Additive expression is missing operator)) Multiple Divisions `[IDENTIFIER=`expr1`@0, OPERATOR=`/`@6, IDENTIFIER=`expr2`@8, OPERATOR=`/`@14, IDENTIFIER=`expr3`@16]`: Failed (Unexpected ParseException (Additive expression is missing operator)) Function: (8/9) Missing Argument `[IDENTIFIER=`name`@0, OPERATOR=`(`@4, IDENTIFIER=`expr1`@5, OPERATOR=`,`@10, OPERATOR=`)`@12]`: Failed (Expected a ParseException to be thrown, received Function{name=\'name\', arguments=[Variable{name=\'expr1\'}]}.) Programs: (6/10) Prime Factorization `[IDENTIFIER=`LET`@0, IDENTIFIER=`i`@4, OPERATOR=`:`@5, IDENTIFIER=`INTEGER`@7, OPERATOR=`=`@15, INTEGER=`2`@17, OPERATOR=`;`@18, IDENTIFIER=`LET`@20, IDENTIFIER=`first`@24, OPERATOR=`:`@29, IDENTIFIER=`INTEGER`@31, OPERATOR=`=`@39, INTEGER=`1`@41, OPERATOR=`;`@42, IDENTIFIER=`PRINT`@44, OPERATOR=`(`@49, STRING=`\"n = \"`@50, OPERATOR=`)`@56, OPERATOR=`;`@57, IDENTIFIER=`WHILE`@59, IDENTIFIER=`i`@65, OPERATOR=`!=`@67, IDENTIFIER=`n`@70, IDENTIFIER=`DO`@72, IDENTIFIER=`zero`@79, OPERATOR=`=`@84, IDENTIFIER=`n`@86, OPERATOR=`-`@88, IDENTIFIER=`i`@90, OPERATOR=`*`@92, OPERATOR=`(`@94, IDENTIFIER=`n`@95, OPERATOR=`/`@97, IDENTIFIER=`i`@99, OPERATOR=`)`@100, OPERATOR=`;`@101, IDENTIFIER=`IF`@107, IDENTIFIER=`zero`@110, OPERATOR=`==`@115, INTEGER=`0`@118, IDENTIFIER=`THEN`@120, IDENTIFIER=`PRINT`@133, OPERATOR=`(`@138, IDENTIFIER=`i`@139, OPERATOR=`)`@140, OPERATOR=`;`@141, IDENTIFIER=`PRINT`@151, OPERATOR=`(`@156, STRING=`\" * \"`@157, OPERATOR=`)`@162, OPERATOR=`;`@163, IDENTIFIER=`n`@173, OPERATOR=`=`@175, IDENTIFIER=`n`@177, OPERATOR=`/`@179, IDENTIFIER=`i`@181, OPERATOR=`;`@182, IDENTIFIER=`ELSE`@190, IDENTIFIER=`i`@203, OPERATOR=`=`@205, IDENTIFIER=`i`@207, OPERATOR=`+`@209, INTEGER=`1`@211, OPERATOR=`;`@212, IDENTIFIER=`END`@218, IDENTIFIER=`END`@222, IDENTIFIER=`PRINT`@226, OPERATOR=`(`@231, IDENTIFIER=`i`@232, OPERATOR=`)`@233, OPERATOR=`;`@234]`: Failed (Unexpected ParseException (Problem parsing primary expression))